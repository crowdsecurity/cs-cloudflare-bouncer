# .github/workflows/build-docker-image.yml
name: build-binary-package

on: 
  release:
    types: [prereleased, released]

jobs:
  build-binary-package:
    name: Build and upload binary package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, freebsd]
        goarch: [amd64, arm64]
    steps:
    - name: Set up Go 1.19
      uses: actions/setup-go@v1
      with:
        go-version: 1.19
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build the binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: make release
    - name: Upload to release
      uses: JasonEtco/upload-to-release@master
      with:
        args: crowdsec-cloudflare-bouncer-${{ env.GOOS }}-${{ env.GOARCH }}.tgz application/x-gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
  build-static-binary-package:
    name: Build and upload static binary package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, freebsd]
        goarch: [amd64, arm64]
    steps:
    - name: Set up Go 1.19
      uses: actions/setup-go@v1
      with:
        go-version: 1.19
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build the binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: make release_static
    - name: Upload to release
      uses: JasonEtco/upload-to-release@master
      with:
        args: crowdsec-cloudflare-bouncer-${{ env.GOOS }}-${{ env.GOARCH }}-static.tgz application/x-gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
